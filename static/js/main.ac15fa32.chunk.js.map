{"version":3,"sources":["Components/navbar/Navbar.js","Components/weather/Weather.js","Components/covid/Summary.js","Components/covid/Countries.js","Components/covid/Covid.js","App.js","index.js"],"names":["Nav","className","to","style","color","api","Weather","useState","query","setQuery","weather","setWeather","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","main","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","temp","Summary","this","props","summary","currentDate","NewConfirmed","toDateString","TotalConfirmed","TotalRecovered","NewDeaths","TotalDeaths","React","Component","Countries","countries","Country","Covid","state","global","loading","axios","get","setState","data","Global","CurrentDate","map","Home","height","width","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac15fa32.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav>\r\n      <ul className=\"nav-links\">\r\n        <Link to=\"/\" style={{ color: \"white\" }}>\r\n          <li>HOME</li>\r\n        </Link>\r\n        <Link to=\"/covid\" style={{ color: \"white\" }}>\r\n          <li>COVID-19</li>\r\n        </Link>\r\n        <Link to=\"/weather\" style={{ color: \"white\" }}>\r\n          <li>WEATHER</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nimport \"./Weather.css\";\r\n\r\nconst api = {\r\n  key: \"db8bfa24a462f86cb92a88587975d1b5\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nfunction Weather() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = (evt) => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWeather(result);\r\n          setQuery(\"\");\r\n          console.log(result);\r\n        });\r\n    }\r\n  };\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n  return (\r\n    <div className=\"app\">\r\n      <main>\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            value={query}\r\n            onKeyPress={search}\r\n          />\r\n        </div>\r\n        {typeof weather.main != \"undefined\" ? (\r\n          <div>\r\n            <div className=\"location-box\">\r\n              <div className=\"location\">\r\n                {weather.name},{weather.sys.country}\r\n              </div>\r\n              <div className=\"date\">{dateBuilder(new Date())}</div>\r\n              <div className=\"weather-box\">\r\n                <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\r\n                <div className=\"season\">{weather.weather[0].main}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\nimport \"./Covid.css\";\r\n\r\nclass Summary extends React.Component {\r\n  render() {\r\n    const { summary, currentDate } = this.props;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"NewConfirmed\">\r\n          <h2>New Confirmed</h2>\r\n          <h1>{summary.NewConfirmed}</h1>\r\n          <h4>{new Date(currentDate).toDateString()}</h4>\r\n        </div>\r\n        <div className=\"TotalConfirmed\">\r\n          <h2>Total Confirmed</h2>\r\n          <h1>{summary.TotalConfirmed}</h1>\r\n          <h4>{new Date(currentDate).toDateString()}</h4>\r\n        </div>\r\n        <div className=\"TotalRecovered\">\r\n          <h2>Total Recoverd</h2>\r\n          <h1>{summary.TotalRecovered}</h1>\r\n          <h4>{new Date(currentDate).toDateString()}</h4>\r\n        </div>\r\n        <div className=\"NewDeaths\">\r\n          <h2>New Deaths</h2>\r\n          <h1>{summary.NewDeaths}</h1>\r\n          <h4>{new Date(currentDate).toDateString()}</h4>\r\n        </div>\r\n        <div className=\"TotalDeaths\">\r\n          <h2>Total Deaths</h2>\r\n          <h1>{summary.TotalDeaths}</h1>\r\n          <h4>{new Date(currentDate).toDateString()}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport \"./Covid.css\";\r\n\r\nclass Countries extends React.Component {\r\n  render() {\r\n    const { countries } = this.props;\r\n    return (\r\n      <tr>\r\n        <td>{countries.Country}</td>\r\n        <td>{countries.NewConfirmed}</td>\r\n        <td>{countries.TotalConfirmed}</td>\r\n        <td>{countries.NewDeaths}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countries;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Summary from \"./Summary\";\r\nimport Countries from \"./Countries\";\r\nimport \"./Covid.css\";\r\n\r\nclass Covid extends React.Component {\r\n  state = {\r\n    countries: [],\r\n    global: [],\r\n    currentDate: null,\r\n    loading: true,\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://api.covid19api.com/summary\");\r\n    console.log(res);\r\n    this.setState({ countries: res.data.Countries });\r\n    this.setState({ global: res.data.Global });\r\n    this.setState({ currentDate: res.data.CurrentDate });\r\n    this.setState({ loading: false });\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <h1>Loading...</h1>;\r\n    }\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Summary\r\n          summary={this.state.global}\r\n          currentDate={this.state.currentDate}\r\n        />\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Countries</th>\r\n              <th>New Confirmed</th>\r\n              <th>Total Confirmed</th>\r\n              <th>Total Recovered</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.countries.map((country) => (\r\n              <Countries countries={country} key={country.Country} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Covid;\r\n","import React from \"react\";\nimport \"./App.css\";\n// import axios from \"axios\";\nimport Nav from \"./Components/navbar/Navbar\";\nimport Weather from \"./Components/weather/Weather\";\nimport Covid from \"./Components/covid/Covid\";\nimport { Route, Switch } from \"react-router-dom\";\nimport GoogleMapReact from \"google-map-react\";\n\nconst Home = () => {\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyCVUJfW6DgL5ZSJYxbq5dN-NTItRmKyEMo\" }}\n        defaultCenter={{ lat: 59.95, lng: 30.33 }}\n        defaultZoom={4}\n      ></GoogleMapReact>\n    </div>\n  );\n};\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/covid\" component={Covid} />\n        <Route path=\"/weather\" component={Weather} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}